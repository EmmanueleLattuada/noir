[package]
name = "noir"
version = "0.1.0"
edition = "2021"
authors = [
    "Luca De Martini <luca.de.martini@protonmail.com>",
    "Edoardo Morassutto <edoardo.morassutto@gmail.com>",
    "Marco Donadoni <marco.donadoni@mail.polimi.it>"
]
license = "LGPL-3.0-or-later"
repository = "https://github.com/deib-polimi/noir"
readme = "README.md"

[features]
default = ["flume", "clap", "ssh", "timestamp"]
crossbeam = ["crossbeam-channel"]
timestamp = []
ssh = ["ssh2", "whoami", "shell-escape", "sha2", "base64"]
async-tokio = ["tokio", "flume", "futures", "tokio/net", "tokio/io-util", "tokio/time", "tokio/rt-multi-thread", "tokio/macros"]
profiler = []

[dependencies]
# for logging to the console
log = { version = "0.4.17", features = ["release_max_level_info"] }

# used by the network for storing type-generic structures
typemap_rev = "0.3.0"

# the shuffle() operator requires a random source
nanorand = "0.7.0"

# utility macros for customizing the derive Debug, Default, ...
derivative = "2.2.0"

# serialization library used for reading the config file (yaml) and serializing
# the messages on the network
serde = { version = "1.0.152", features = ["derive"] }
serde_yaml = "0.9.17"
serde_json = "1.0.92"
bincode = "1.3.3"

# handy Result type
anyhow = "1.0.69"
thiserror = "1.0.38"

# handy iterators functions
itertools = "0.10.5"

# for storing non-mutable static variables with non-trivial initialization
once_cell = "1.17.0"

# used for spawning the remote workers
ssh2 = { version = "0.9.4", features = ["vendored-openssl"], optional = true }
whoami = { version = "1.3.0", optional = true }
shell-escape = { version = "0.1.5", optional = true }
clap = { version = "4.1.4", features = ["derive"], optional = true }
sha2 = { version = "0.10.6", optional = true }
base64 = { version = "0.21.0", optional = true }

# channel implementation
crossbeam-channel = { version = "0.5.6", optional = true }
flume = { version = "0.10.14", optional = true }

# Used for KeyedWindowManager
hashbrown = "0.13.2"

# used for csv file source
csv = "1.1.6"

# Lazy with support for delayed and synchronized initialization
lazy-init = "0.5.1"

# Format dates and times
chrono = "0.4.23"

# Faster monotonic clock using libc's CLOCK_MONOTONIC_COARSE
coarsetime = "0.1.22"

tokio = { version = "1.25.0", features = ["rt"], default-features = false, optional = true }
futures = { version = "0.3.26", optional = true }

parking_lot = "0.12.1"

wyhash = "0.5.0"
fxhash = "0.2.1"
glidesort = "0.1.2"
micrometer = { version = "0.2.0", features = ["enable"] }

# Persistency
redis = "0.23.0"

[dev-dependencies]
# for the tests
env_logger = "0.10.0"
rand = { version = "0.8.5", features = ["small_rng"] }
tempfile = "3.3.0"
criterion = { version = "0.4.0", features = ["html_reports"] }
fake = "2.5.0"
mimalloc = { version = "0.1.34", default-features = false }
tracing-subscriber = "0.3.16"
serial_test = "2.0.0"

# for the examples
regex = "1.7.1"

# used in the benchmarks
crossbeam-channel = "0.5.6"
flume = "0.10.14"

kstring = { version = "2.0.0", features = ["serde"] }
nexmark = { version = "0.2.0", features = ["serde"] }

[[example]]
name = "nexmark"
required-features = ["timestamp"]

[[example]]
name = "rolling_top_words"
required-features = ["timestamp"]

[[example]]
name = "rolling_top_words_e2e"
required-features = ["timestamp"]

# The list of benchmarks, all of them require "harness = false" in order to
# work with criterion.rs. Cannot set `[lib] harness = false` because the tests
# require the harness.
[[bench]]
name = "wordcount"
harness = false
[[bench]]
name = "wordcount_by_line"
harness = false
[[bench]]
name = "shuffle"
harness = false
[[bench]]
name = "fold_vs_reduce"
harness = false
[[bench]]
name = "batch_mode"
harness = false
[[bench]]
name = "recv_vs_select"
harness = false
[[bench]]
name = "coarse_time"
harness = false

[profile.release]
lto = true
strip = "symbols"
# debug = 1
